(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{379:function(t,e,a){"use strict";a.r(e);var s=a(25),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"computed-variable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-variable"}},[t._v("#")]),t._v(" Computed Variable")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),a("p",[t._v("Computed variables are not yet implemented in the parser.")]),t._v(" "),a("p",[t._v("Computed variables are functions that returns one or more values, in the form of")]),t._v(" "),a("div",{staticClass:"language-ream extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ream"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" function (fn -> return_type)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value string"}},[t._v("`statements that return values`")])]),t._v("\n")])])]),a("p",[t._v("Some simple examples:")]),t._v(" "),a("div",{staticClass:"language-ream extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ream"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Numbers")]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" one (Number)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value number"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")])])]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" two (Number)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value number"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")])])]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" three (Number)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value number"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")])])]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" four (fn -> Number)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value string"}},[t._v("`2 + 2`")])]),t._v("\n")])])]),a("div",{staticClass:"language-ream extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ream"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" CountryYear")]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" country (String)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Belgium")])]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" year (String)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value string"}},[t._v("2020")])]),a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" unique_id (fn -> String)")]),a("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),a("span",{pre:!0,attrs:{class:"token value string"}},[t._v("`'Belgium' + '_' + '2020'`")])]),t._v("\n")])])]),a("p",[t._v("For function with more than one line, the syntax would be:")]),t._v(" "),a("div",{staticClass:"language-ream extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ream"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyValuePair"}},[a("span",{pre:!0,attrs:{class:"token key"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" function (fn -> return_type)")]),a("span",{pre:!0,attrs:{class:"token value string"}},[t._v(":")])]),t._v("\n```language_name\nstatements\nthat\nreturn\nvalues\n```\n")])])]),a("p",[t._v("But what language to use?")]),t._v(" "),a("p",[t._v("I'm currently rewriting the parser in Rust, with the goal to use the same codebase for both standalone CLI tool and the web-based editor.\nThat being said, I need this embedded language to")]),t._v(" "),a("ol",[a("li",[t._v("be interpreted or compiled just in time,")]),t._v(" "),a("li",[t._v("works with WASM,")]),t._v(" "),a("li",[t._v("is easy to learn and read.")])]),t._v(" "),a("p",[t._v("There are "),a("a",{attrs:{href:"https://arewegameyet.rs/ecosystem/scripting/",target:"_blank",rel:"noopener noreferrer"}},[t._v("a lot of langauges created to be embedded in Rust applications."),a("OutboundLink")],1),t._v(".\nI've been experimenting with "),a("a",{attrs:{href:"https://rhai.rs/book/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rhai"),a("OutboundLink")],1),t._v(", and is pleased with how easy it is to integrate the language with Rust.\nIt has basic libraries for strings and numbers, and it's easy add my own modules.\nBut one major problem that Rhai, as well as most such languages, has is that my targeted audience most definitely don't know it.\nIt's hard to convince them to learn a language that has little use outside of REAM; the most popular among those is Lua, and even that would be a hard sell.\nRelying too much on these embedable langauges may lead to a steaper learning curve.")]),t._v(" "),a("p",[t._v("The second option is to embed a mature language interpreter written in Rust, such as "),a("a",{attrs:{href:"https://rustpython.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RustPython"),a("OutboundLink")],1),t._v(" for Python or "),a("a",{attrs:{href:"https://github.com/boa-dev/boa",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boa"),a("OutboundLink")],1),t._v(" for JavaScript.\nPeople are more likely to know these langauges, and may be more willing to learn even if they don't.\nOne obvious downside is that I have to ship my tool with the language interpreter, while I'm trying to keep the core application small.\nIt's almost certain that any of such add-ons would be larger in size than the core code base.\nAnother problem is that most of such projects are not production ready.")]),t._v(" "),a("p",[t._v("The third option is to write my own language.\nIt doesn't have to be a general-purpose turning-complete language, but to simply provide basic methods to manipulate strings, numbers, and other types supported by REAM.\nIf doing so, the syntax of this language would be similar to Python and supports method chaining.")]),t._v(" "),a("p",[t._v("Currently I'm debating between using Rhai and writing my own.\nI lean slightly toward writing my own because I want to implement "),a("a",{attrs:{href:"/ream-doc/Language/Advanced/Reference"}},[t._v("Reference")]),t._v(".")])])])}),[],!1,null,null,null);e.default=n.exports}}]);