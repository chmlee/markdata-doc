(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{377:function(t,a,s){"use strict";s.r(a);var e=s(25),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"template"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[t._v("#")]),t._v(" Template")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Template is not yet implemented in the current parser.")]),t._v(" "),s("p",[t._v("The goal of the template is to make datasets modular. Save a large datasets in smaller, manageable chunks, and bind them with the template specified int he codebook.\nIt also makes importing external datasets possible.")]),t._v(" "),s("p",[t._v("Template is inspired by template languages.\nOne of the earlier implementations was based on "),s("a",{attrs:{href:"https://jinja.palletsprojects.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jinja"),s("OutboundLink")],1),t._v(", but since the project has moved away from Python, a new solution is needed.")]),t._v(" "),s("p",[t._v("Say you want to bind the following three files into one file:")]),t._v(" "),s("div",{staticClass:"language-ream extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ream"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Belgium")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Brussels")])]),t._v("\n")])])]),s("div",{staticClass:"language-ream extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ream"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Netherlands")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Amsterdam")])]),t._v("\n")])])]),s("div",{staticClass:"language-ream extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ream"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Luxembourg")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Luxembourg City")])]),t._v("\n")])])]),s("p",[t._v("You can do so by specifying the schema in the codebook:")]),t._v(" "),s("div",{staticClass:"language-ream extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ream"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" The Benelux Union")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" countries (List.Path)")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v(":")])]),s("span",{pre:!0,attrs:{class:"token listItem"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("  ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v(" ./Country/Belgium.ream")])]),s("span",{pre:!0,attrs:{class:"token listItem"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("  ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v(" ./Country/Netherlands.ream")])]),s("span",{pre:!0,attrs:{class:"token listItem"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("  ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v(" ./Country/Luxembourg.ream")])]),t._v("\n\n{% FOR Country IN $countries %}\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("{{ Country$name }}")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("{{ Country$capital}}")])]),t._v("\n")])])]),s("p",[t._v("If you are familiar with any template language, you can probably tell I'm trying to write the template logics with REAM syntax as much as I can to let them less out of place.\nExternal elements are imported through specifying a variable with "),s("code",[t._v("List.path")]),t._v(" type, a list of file paths.\nWe don't need to mark where the "),s("code",[t._v("FOR")]),t._v(" loop ends with something like "),s("code",[t._v("{% ENDFOR %}")]),t._v(" since of course I want to render the entire "),s("code",[t._v("## Country")]),t._v(" entry and not just part of it.\nBut I have yet to find a better way to incorporate the "),s("code",[t._v("FOR")]),t._v(" logic with REAM syntax, hence the weird "),s("code",[t._v("{% FOR ... IN ... %}")]),t._v(" syntax.")]),t._v(" "),s("p",[t._v("Or maybe it is a bad idea to write template logics with native syntax, and I should just write all template logics with an entirely different syntax.\nSince Jinja is the only template language I am familiar with, let's write the template logics in a Jinja-like syntax.\nIt would probably look like:")]),t._v(" "),s("div",{staticClass:"language-jinja2 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jinja2"}},[s("code",[s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./Country/Belgium.ream'")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Belgium")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./Country/Netherlands.ream'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Netherlands")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./Country/Luxembourg.ream'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Luxembourg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Countries")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Belgium")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Netherlands")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Luxembourg")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n# The Benelux Union\n\n"),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Country")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Countries")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n## Country\n- name: "),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Country")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n- capital: "),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("Country")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("capital")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("}}")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token jinja2 language-jinja2"}},[s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("{%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag keyword"}},[t._v("endfor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token delimiter punctuation"}},[t._v("%}")])]),t._v("\n")])])]),s("p",[t._v("This is so much harder to read.\nIf this is what my template language eventually looks like, why would anyone choose this instead of using something like Jinja which features similar syntax but more mature, more feature-rich, and (almost certainly) faster?")]),t._v(" "),s("p",[t._v("(Well, one reason may be that this is NOT how you should write Jinja, as "),s("a",{attrs:{href:"https://jinja.palletsprojects.com/en/2.11.x/faq/#isn-t-it-a-terrible-idea-to-put-logic-into-templates",target:"_blank",rel:"noopener noreferrer"}},[t._v("it is usually recommended to remove as much logic from templates as possible"),s("OutboundLink")],1),t._v(", and I put EVERY logic in the template.\nI would assume other template languages have similar recommendations.)")]),t._v(" "),s("p",[t._v("If I want to write a template language for REAM, I want my solution to incorporate elegantly into REAM's native syntax, just like Vue's "),s("a",{attrs:{href:"https://vuejs.org/v2/api/#v-for",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("v-for")]),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Anyway, both templates should generate the following file:")]),t._v(" "),s("div",{staticClass:"language-ream extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ream"}},[s("code",[s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("#")]),t._v(" The Benelux Union")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Belgium")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Brussels")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Netherlands")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Amsterdam")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token header"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" Country")]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Luxembourg")])]),s("span",{pre:!0,attrs:{class:"token keyValuePair"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token key"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" capital")]),s("span",{pre:!0,attrs:{class:"token semiolon punctuation"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token value string"}},[t._v("Luxembourg City")])]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://jinja.palletsprojects.com/en/2.11.x/templates/#list-of-builtin-filters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Filter"),s("OutboundLink")],1),t._v(" is another useful functionality I plan to implement.\nSee "),s("a",{attrs:{href:"/ream-doc/Language/Advanced/Computed-Variable"}},[t._v("Computed Variable")]),t._v(".")])])])}),[],!1,null,null,null);a.default=n.exports}}]);